#include<GL/glut.h>
#include<stdlib.h>
#include<stdio.h>
#include<iostream>
using namespace std;

float x3, x4, y3, y4;

void display(void)
{
	glClear(GL_COLOR_BUFFER_BIT);
	float dy, dx, step, x, y, k, Xin, Yin;
	dx = x4 - x3;
	dy = y4 - y3;

	if (abs(dx) > abs(dy))
		step = abs(dx);
	else
		step = abs(dy);

	Xin = dx / step;
	Yin = dy / step;

	x = x3;
	y = y3;
	glBegin(GL_POINTS);
	glColor3f(0, 0, 0);
	glVertex2i(x, y);
	glEnd();

	for (k = 1; k <= step; k++)
	{
		x = x + Xin;
		y = y + Yin;

		glBegin(GL_POINTS);
		glColor3f(0, 0, 0);
		glVertex2i(x, y);
		glEnd();
	}

	glFlush();
}

void init()
{
	glClearColor(1.0, 1.0, 1.0, 0.0); //white color window
	glMatrixMode(GL_PROJECTION);
	gluOrtho2D(0, 500, 0, 500);
}

int main(int argc, char** argv)
{
	cout << "Enter the value of x1 : ";
	cin >> x3;
	cout << "Enter the value of y1 : ";
	cin >> y3;
	cout << "Enter the value of x2 : ";
	cin >> x4;
	cout << "Enter the value of y2 : ";
	cin >> y4;

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
	glutInitWindowSize(800, 500);
	glutInitWindowPosition(50, 100);
	glutCreateWindow("DDA Line Algo");
	init();
	glutDisplayFunc(display);
	glutMainLoop();

	return 0;
}